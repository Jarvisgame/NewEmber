# 数据处理相关
path: 
  data_dir: ./data #总数据目录
  output_dir: ./output #输出目录
  binary_files_dir: ./data/binary_files #二进制文件目录(用于3字节图像处理、字节直方图、字节熵直方图、PE静态文件结构特征提取、汇编码特征提取、函数调用关系图谱、字符串特征提取)

system_info:
  max_workers: 16 #最大工作线程数

three_gram_byte_plot:
  input_dir: ./data/binary_files #输入目录
  output_dir: ./output/three_gram_byte_plot #输出目录
  image_size: 128 #图像大小

pe_static_features:
  input_dir: ./data/binary_files #输入目录
  output_dir: ./output/pe_static_features #输出目录

decision_tree_classifier:
  input_dir: ./output/three_gram_byte_plot #输入目录
  output_dir: ./output/model/dt_model # 模型输出目录

decision_tree_classifier_jsonl:
  input_dir: ./output/pe_static_features/pe_metadata #输入目录
  output_dir: ./output/model/dt_model_jsonl # 模型输出目录
  test_size: 0.2 # 测试集比例
  random_state: 42 # 随机种子
  
random_forest_classifier:
  input_dir: ./output/three_gram_byte_plot #输入目录
  output_dir: ./output/model/rf_model # 模型输出目录

random_forest_classifier_jsonl:
  # 作为训练集的 JSONL 根目录（建议指向你 pe_metadata 的输出目录）
  input_dir: ./output/pe_static_features/pe_metadata

  # 模型输出目录
  output_dir: ./output/model/rf_model_jsonl

  # 数据划分与随机种子
  test_size: 0.2
  random_state: 42

  # 随机森林超参数（可按需调整）
  n_estimators: 300
  max_depth:
  n_jobs: -1
  class_weight: balanced_subsample  # 类不平衡更稳

svm_classifier:
  input_dir: ./output/three_gram_byte_plot #输入目录
  output_dir: ./output/model/svm_model # 模型输出目录

svm_classifier_jsonl:
  # 作为训练集的 JSONL 根目录（指向 pe_metadata 输出目录）
  input_dir: ./output/pe_static_features/pe_metadata

  # 模型输出目录
  output_dir: ./output/model/svm_model_jsonl

  # 数据划分与随机种子
  test_size: 0.2
  random_state: 42

  # SVM 超参数
  C: 1.0
  max_iter: 2000
  class_weight: balanced

mlp_classifier:
  input_dir: ./output/three_gram_byte_plot #输入目录
  output_dir: ./output/model/mlp_model # 模型输出目录

mlp_classifier_jsonl:
  input_dir: ./output/pe_static_features/pe_metadata
  output_dir: ./output/model/mlp_model_jsonl
  test_size: 0.2
  random_state: 42
  hidden_layer_sizes: [256, 128]
  max_iter: 200
  alpha: 0.0001
  early_stopping: true
  validation_fraction: 0.1
  learning_rate: adaptive

cnn_classifier:
  input_dir: ./output/three_gram_byte_plot # 输入目录
  output_dir: ./output/model/cnn_model # 模型输出目录
  batch_size: 16 # 批处理大小
  epochs: 10 # 训练轮数
  lr: 0.001 # 学习率
  seed: 42 # 随机种子

cnn_classifier_jsonl:
  input_dir: ./output/pe_static_features/pe_metadata
  output_dir: ./output/model/cnn_model_jsonl
  batch_size: 64
  epochs: 20
  lr: 0.001
  test_size: 0.2
  random_state: 42
  num_workers: 4

ensemble_classifier:
  input_dir: ./output/three_gram_byte_plot
  output_dir: ./output/model/ensemble_model
  test_size: 0.2
  random_state: 42

ensemble_classifier_jsonl:
  input_dir: ./output/pe_static_features/pe_metadata
  output_dir: ./output/model/ensemble_model_jsonl
  test_size: 0.2
  random_state: 42

  rf:
    n_estimators: 300
    max_depth:
    n_jobs: -1
    class_weight: balanced_subsample

  svm:
    C: 1.0
    max_iter: 2000
    class_weight: balanced

  mlp:
    hidden_layer_sizes: [256, 128]
    max_iter: 200
    alpha: 0.0001
    early_stopping: true
    validation_fraction: 0.1
    learning_rate: adaptive